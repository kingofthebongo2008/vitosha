<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{E5F03163-D9E2-4950-85E8-1E9A0946260E}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>irradiance</RootNamespace>
    <VCTargetsPath Condition="'$(VCTargetsPath11)' != '' and '$(VSVersion)' == '' and $(VisualStudioVersion) == ''">$(VCTargetsPath11)</VCTargetsPath>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>./;./extern/boost_1_49_0;$(IntDir)/shaders;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>precompiled.h</PrecompiledHeaderFile>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>d3d11.lib;dxgi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>precompiled.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>./;./extern/boost_1_49_0;$(IntDir)/shaders;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="gx\gx_shader_depth_vs.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3 </Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_screen_space_vs.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_screen_space_ps.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_phong_ps.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_phong_vs.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension) /T vs_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_color_ps.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_lambert_constant_ps.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_lambert_ps.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T ps_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="gx\gx_shader_lambert_vs.hlsl">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension)  /T vs_5_0 /Vn %(FileName)</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(WindowsSDKDir)\bin\x64\fxc.exe" "%(FullPath)" /Fh  $(IntDir)shaders\%(Filename)_compiled%(Extension) /T vs_5_0 /Vn %(FileName) /Qstrip_reflect /Qstrip_debug /Qstrip_priv /Ges /O3</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)shaders\%(Filename)_compiled%(Extension)</Outputs>
    </CustomBuild>
    <None Include="irradiance.ico" />
    <None Include="ReadMe.txt" />
    <None Include="small.ico" />
    <None Include="util\util_iterator.h" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="dx11\dx11_error.h" />
    <ClInclude Include="dx11\dx11_exception.h" />
    <ClInclude Include="dx11\dx11_helpers.h" />
    <ClInclude Include="dx11\dx11_pointers.h" />
    <ClInclude Include="dx11\dx11_system.h" />
    <ClInclude Include="fnd\fnd_universe.h" />
    <ClInclude Include="fnd\fnd_updater.h" />
    <ClInclude Include="fnd\fnd_world.h" />
    <ClInclude Include="gxu\gxu_entity_factory.h" />
    <ClInclude Include="gxu\gxu_static_mesh_entity.h" />
    <ClInclude Include="gx\gx_color.h" />
    <ClInclude Include="gx\gx_color_material.h" />
    <ClInclude Include="gx\gx_color_pixel_shader.h" />
    <ClInclude Include="gx\gx_constant_buffer_helper.h" />
    <ClInclude Include="gx\gx_create_draw_calls_pipeline_node.h" />
    <ClInclude Include="gx\gx_draw_calls_pipeline_params.h" />
    <ClInclude Include="gx\gx_draw_call_collector.h" />
    <ClInclude Include="gx\gx_draw_call_collector_context.h" />
    <ClInclude Include="gx\gx_draw_call_context.h" />
    <ClInclude Include="gx\gx_execute_draw_calls_pipeline_node.h" />
    <ClInclude Include="gx\gx_indexed_draw_call.h" />
    <ClInclude Include="gx\gx_entity.h" />
    <ClInclude Include="gx\gx_draw_call_key.h" />
    <ClInclude Include="gx\gx_final_pipeline_node.h" />
    <ClInclude Include="gx\gx_initializer.h" />
    <ClInclude Include="gx\gx_lambert_constant_material.h" />
    <ClInclude Include="gx\gx_lambert_constant_pixel_shader.h" />
    <ClInclude Include="gx\gx_lambert_material.h" />
    <ClInclude Include="gx\gx_lambert_pixel_shader.h" />
    <ClInclude Include="gx\gx_lambert_vertex_shader.h" />
    <ClInclude Include="gx\gx_material_database.h" />
    <ClInclude Include="gx\gx_phong_material.h" />
    <ClInclude Include="gx\gx_phong_pixel_shader.h" />
    <ClInclude Include="gx\gx_phong_vertex_shader.h" />
    <ClInclude Include="gx\gx_pinhole_camera.h" />
    <ClInclude Include="gx\gx_pipeline.h" />
    <ClInclude Include="gx\gx_pipeline_params.h" />
    <ClInclude Include="gx\gx_screen_space_pixel_shader.h" />
    <ClInclude Include="gx\gx_screen_space_quad.h" />
    <ClInclude Include="gx\gx_render_context.h" />
    <ClInclude Include="gx\gx_scene_pipeline_node.h" />
    <ClInclude Include="gx\gx_depth_shader.h" />
    <ClInclude Include="gx\gx_screen_space_vertex_shader.h" />
    <ClInclude Include="gx\gx_thread_render_context.h" />
    <ClInclude Include="gx\gx_view_pipeline_node.h" />
    <ClInclude Include="gx\gx_scene.h" />
    <ClInclude Include="math\math_functions.h" />
    <ClInclude Include="math\math_graphics.h" />
    <ClInclude Include="math\math_half.h" />
    <ClInclude Include="math\math_matrix.h" />
    <ClInclude Include="math\math_vector.h" />
    <ClInclude Include="mem\mem_alloc.h" />
    <ClInclude Include="mem\mem_ref_counter.h" />
    <ClInclude Include="mem\mem_streamflow.h" />
    <ClInclude Include="precompiled.h" />
    <ClInclude Include="gx\gx_view.h" />
    <ClInclude Include="gx\gx_view_port.h" />
    <ClInclude Include="sys\sys_base.h" />
    <ClInclude Include="sys\sys_scheduler.h" />
    <ClInclude Include="sys\sys_spin_lock.h" />
    <ClInclude Include="sys\sys_spsc_queue.h" />
    <ClInclude Include="sys\sys_task.h" />
    <ClInclude Include="sys\sys_thread.h" />
    <ClInclude Include="win32/irradiance.h" />
    <ClInclude Include="win32/resource.h" />
    <ClInclude Include="win32/application.h" />
    <ClInclude Include="win32/targetver.h" />
    <ClInclude Include="win32/window.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="dx11\dx11_helpers.cpp" />
    <ClCompile Include="dx11\dx11_system.cpp" />
    <ClCompile Include="fnd\fnd_universe.cpp" />
    <ClCompile Include="fnd\fnd_updater.cpp" />
    <ClCompile Include="fnd\fnd_world.cpp" />
    <ClCompile Include="gxu\gxu_entity_factory.cpp" />
    <ClCompile Include="gxu\gxu_static_mesh_entity.cpp" />
    <ClCompile Include="gx\gx_color_material.cpp" />
    <ClCompile Include="gx\gx_color_pixel_shader.cpp" />
    <ClCompile Include="gx\gx_create_draw_calls_pipeline_node.cpp" />
    <ClCompile Include="gx\gx_draw_call_collector.cpp" />
    <ClCompile Include="gx\gx_draw_call_collector_context.cpp" />
    <ClCompile Include="gx\gx_execute_draw_calls_pipeline_node.cpp" />
    <ClCompile Include="gx\gx_indexed_draw_call.cpp" />
    <ClCompile Include="gx\gx_entity.cpp" />
    <ClCompile Include="gx\gx_draw_call_key.cpp" />
    <ClCompile Include="gx\gx_final_pipeline_node.cpp" />
    <ClCompile Include="gx\gx_initializer.cpp" />
    <ClCompile Include="gx\gx_lambert_constant_material.cpp" />
    <ClCompile Include="gx\gx_lambert_constant_pixel_shader.cpp" />
    <ClCompile Include="gx\gx_lambert_material.cpp" />
    <ClCompile Include="gx\gx_lambert_pixel_shader.cpp" />
    <ClCompile Include="gx\gx_lambert_vertex_shader.cpp" />
    <ClCompile Include="gx\gx_material_database.cpp" />
    <ClCompile Include="gx\gx_phong_material.cpp" />
    <ClCompile Include="gx\gx_phong_pixel_shader.cpp" />
    <ClCompile Include="gx\gx_phong_vertex_shader.cpp" />
    <ClCompile Include="gx\gx_pinhole_camera.cpp" />
    <ClCompile Include="gx\gx_pipeline.cpp" />
    <ClCompile Include="gx\gx_screen_space_pixel_shader.cpp" />
    <ClCompile Include="gx\gx_screen_space_quad.cpp" />
    <ClCompile Include="gx\gx_render_context.cpp" />
    <ClCompile Include="gx\gx_scene_pipeline_node.cpp" />
    <ClCompile Include="gx\gx_depth_shader.cpp" />
    <ClCompile Include="gx\gx_screen_space_vertex_shader.cpp" />
    <ClCompile Include="gx\gx_thread_render_context.cpp" />
    <ClCompile Include="gx\gx_view_pipeline_node.cpp" />
    <ClCompile Include="gx\gx_scene.cpp" />
    <ClCompile Include="irradiance.cpp">
      <AssemblerOutput Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AssemblyCode</AssemblerOutput>
    </ClCompile>
    <ClCompile Include="irradiance_win32.cpp" />
    <ClCompile Include="math\math_functions.cpp" />
    <ClCompile Include="math\math_half.cpp" />
    <ClCompile Include="precompiled.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">precompiled.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="gx\gx_view.cpp" />
    <ClCompile Include="gx\gx_view_port.cpp" />
    <ClCompile Include="win32\application.cpp" />
    <ClCompile Include="win32\window.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="win32/irradiance.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>